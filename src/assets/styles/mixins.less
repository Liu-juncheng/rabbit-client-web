// mixins.less 文件目录 用来存放一些公共的,全局可用的公共样式函数混入
//less混入就是，申明一段css代码（选择器包裹的代码）或者函数，在其他css选择器调用，可复用包裹的代码,进行全局的通用调用！

//此方法写成类选择器,#选择器,虽然能实现全局调用的效果,但会被编译两次！
.abc {
width: 100px;
height: 100px;
}

.box {
 .abc();
}

//此方法写成函数形式不会被编译两次，推荐
.abc2() {
 width: 100px;
 height: 100px;
}

 //直接调用即可
.box2 { 
  .abc();
}

//如何实现完成自动注入公用变量和混入,  而不是每次使用公用的变量和mixin的时候需要单独引入到文件中,都要去组件手动引用。
// 解决方法： 使用vuecli的style-resoures-loader插件来完成自动注入到每个less文件或者vue组件中style标签中。
// 在当前项目下执行一下命令vue add style-resources-loader，添加一个vuecli的插件
// 1,如遇警告,继续输入y即可  2,选择less作为预处理器

  //less预处理的全局变量,混入,自动全局注入 ==> 配置
  // pluginOptions: {
  //   "style-resources-loader": {
  //     preProcessor: "less",
  //     //patterns需要读取的文件路径，必须使用绝对路径,
  //     patterns: [
  //       //path.join() 方法是用于修正路径,例如: ../../路径他是无法识别,而是用.join()则可以修复跳过读取下一级路径！
  //       //__dirname 表示我们项目的根路径！
  //       path.join(__dirname, "./src/assets/styles/variables.less"), //从这个文件路径读取 全局样书变量
  //       path.join(__dirname, "./src/assets/styles/mixins.less"), //从这个文件读取全局混入
  //     ],
  //   },
  // },

//-------------------------------------------------------------------------------------------------------

// 鼠标经过上移阴影动画
.hoverShadow () {
  transition: all .5s;
  &:hover {
    transform: translate3d(0,-3px,0);
    box-shadow: 0 3px 8px rgba(0,0,0,0.2);
  }
}